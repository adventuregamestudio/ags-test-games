// Test Object Access Module Script
int GetTestObjectAccessCount()
{
  return 52;
}

void TestObjectAccess()
{  
  tap.Comment("start Object Access tests");
  {
    tap.is(cZero.ScriptName, "cZero", "ScriptName: cZero is \"cZero\" ");
    tap.is(character[0].ScriptName, "cZero", "ScriptName: character[0] is \"cZero\"");
    tap.is(cOne.ScriptName, "cOne", "ScriptName: cOne is \"cOne\"");
    tap.is(character[1].ScriptName, "cOne", "ScriptName: character[1] is \"cOne\"");
    tap.is(cTwo.ScriptName, "cTwo", "ScriptName: cTwo is \"cTwo\"");
    tap.is(character[2].ScriptName, "cTwo", "ScriptName: character[2] is \"cTwo\"");
    tap.is(cThree.ScriptName, "cThree", "ScriptName: cThree is \"cThree\"");
    tap.is(character[3].ScriptName, "cThree", "ScriptName: character[3] is \"cThree\""); 
    
    tap.ok(cZero == character[0], "Compare with array: character[0] == cZero");
    tap.ok(cOne == character[1], "Compare with array: character[1] == cOne");
    tap.ok(cTwo == character[2], "Compare with array: character[2] == cTwo");
    tap.ok(cThree == character[3], "Compare with array: character[3] == cThree");
    
    Character *cGotCharZero = Character.GetByName(cZero.ScriptName);
    tap.ok(cGotCharZero == cZero, "Character.GetByName: cZero");
    Character *cGotCharOne = Character.GetByName(cOne.ScriptName);
    tap.ok(cGotCharOne == cOne, "Character.GetByName: cOne");
    Character *cGotCharTwo = Character.GetByName(cTwo.ScriptName);
    tap.ok(cGotCharTwo == cTwo, "Character.GetByName: cTwo");
    Character *cGotCharThree = Character.GetByName(cThree.ScriptName);
    tap.ok(cGotCharThree == cThree, "Character.GetByName: cThree");
  }
  
  {
    tap.is(iInvItemOne.ScriptName, "iInvItemOne", "ScriptName: iInvItemOne is \"iInvItemOne\"");
    tap.is(inventory[1].ScriptName, "iInvItemOne", "ScriptName: inventory[1] is \"iInvItemOne\"");
    tap.is(iInvItemTwo.ScriptName, "iInvItemTwo", "ScriptName: iInvItemTwo is \"iInvItemTwo\"");
    tap.is(inventory[2].ScriptName, "iInvItemTwo", "ScriptName: inventory[2] is \"iInvItemTwo\"");
    tap.is(iInvItemThree.ScriptName, "iInvItemThree", "ScriptName: iInvItemThree is \"iInvItemThree\"");
    tap.is(inventory[3].ScriptName, "iInvItemThree", "ScriptName: inventory[3] is \"iInvItemThree\"");
    
    tap.ok(iInvItemOne == inventory[1], "Compare with array: inventory[1] == iInvItemOne");
    tap.ok(iInvItemTwo == inventory[2], "Compare with array: inventory[2] == iInvItemTwo");
    tap.ok(iInvItemThree == inventory[3], "Compare with array: inventory[3] == iInvItemThree");
    
    InventoryItem *cGotInvOne = InventoryItem.GetByName(iInvItemOne.ScriptName);
    tap.ok(cGotInvOne == iInvItemOne, "InventoryItem.GetByName: iInvItemOne");
    InventoryItem *cGotInvTwo = InventoryItem.GetByName(iInvItemTwo.ScriptName);
    tap.ok(cGotInvTwo == iInvItemTwo, "InventoryItem.GetByName: iInvItemTwo");
    InventoryItem *cGotInvThree = InventoryItem.GetByName(iInvItemThree.ScriptName);
    tap.ok(cGotInvThree == iInvItemThree, "InventoryItem.GetByName: iInvItemThree");
  }
  
  {
    // FIXME: following assignment defeats the purpose of comparison between object ptr and array element
    // For the best results this part of the test should be run inside the room script
    Object* oTmpZero = object[0];
    Object* oTmpOne = object[1];
    Object* oTmpTwo = object[2];
    
    tap.is(oTmpZero.ScriptName, "oObjectZero", "ScriptName: oTmpZero is \"oObjectZero\"");
    tap.is(object[0].ScriptName, "oObjectZero", "ScriptName: object[0] is \"oObjectZero\"");
    tap.is(oTmpOne.ScriptName, "oObjectOne", "ScriptName: oTmpOne is \"oObjectOne\"");
    tap.is(object[1].ScriptName, "oObjectOne", "ScriptName: object[1] is \"oObjectOne\"");
    tap.is(oTmpTwo.ScriptName, "oObjectTwo", "ScriptName: oTmpTwo is \"oObjectTwo\"");
    tap.is(object[2].ScriptName, "oObjectTwo", "ScriptName: object[2] is \"oObjectTwo\"");
    
    tap.ok(oTmpZero == object[0], "Compare with array: object[0] == oTmpZero");
    tap.ok(oTmpOne == object[1], "Compare with array: object[1] == oTmpOne");
    tap.ok(oTmpTwo == object[2], "Compare with array: object[2] == oTmpTwo");
    
    Object *cGotObjZero = Object.GetByName(oTmpZero.ScriptName);
    tap.ok(cGotObjZero == oTmpZero, "Object.GetByName: oObjectZero");
    Object *cGotObjOne = Object.GetByName(oTmpOne.ScriptName);
    tap.ok(cGotObjOne == oTmpOne, "Object.GetByName: oObjectOne");
    Object *cGotObjTwo = Object.GetByName(oTmpTwo.ScriptName);
    tap.ok(cGotObjTwo == oTmpTwo, "Object.GetByName: oObjectTwo");
  }
  
  {
    // FIXME: following assignment defeats the purpose of comparison between object ptr and array element
    // For the best results this part of the test should be run inside the room script
    Hotspot* hTmpOne = hotspot[1];
    Hotspot* hTmpTwo = hotspot[2];
    Hotspot* hTmpThree = hotspot[3];
    
    tap.is(hTmpOne.ScriptName, "hHotspotOne", "ScriptName: hTmpOne is \"hHotspotOne\"");
    tap.is(hotspot[1].ScriptName, "hHotspotOne", "ScriptName: hotspot[1] is \"hHotspotOne\"");
    tap.is(hTmpTwo.ScriptName, "hHotspotTwo", "ScriptName: hTmpTwo is \"hHotspotTwo\"");
    tap.is(hotspot[2].ScriptName, "hHotspotTwo", "ScriptName: hotspot[2] is \"hHotspotTwo\"");
    tap.is(hTmpThree.ScriptName, "hHotspotThree", "ScriptName: hTmpThree is \"hHotspotThree\"");
    tap.is(hotspot[3].ScriptName, "hHotspotThree", "ScriptName: hotspot[3] is \"hHotspotThree\"");
    
    tap.ok(hTmpOne == hotspot[1], "Compare with array: hotspot[1] == hTmpOne");
    tap.ok(hTmpTwo == hotspot[2], "Compare with array: hotspot[2] == hTmpTwo");
    tap.ok(hTmpThree == hotspot[3], "Compare with array: hotspot[3] == hTmpThree");
    
    Hotspot *cGotHotOne = Hotspot.GetByName(hTmpOne.ScriptName);
    tap.ok(cGotHotOne == hTmpOne, "Hotspot.GetByName: hHotspotOne");
    Hotspot *cGotHotTwo = Hotspot.GetByName(hTmpTwo.ScriptName);
    tap.ok(cGotHotTwo == hTmpTwo, "Hotspot.GetByName: hHotspotTwo");
    Hotspot *cGotHotThree = Hotspot.GetByName(hTmpThree.ScriptName);
    tap.ok(cGotHotThree == hTmpThree, "Hotspot.GetByName: hHotspotThree");
  }
  
  tap.Comment("end Misc tests");
}