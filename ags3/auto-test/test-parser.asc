// Test Parser Module Script
int GetTestParserCount()
{
  return 12 + 14 /* prefixed tests */ + 6 /* synonyms */ + 48 /* one multi-word */ + 32 /* two multi-words */;
}

void TestParserSaid(const string saidWords, const string inputText, int expectedResult)
{
    Parser.ParseText(inputText);
    String testName = String.Format("TestParserSaid: Said() '%s' with ParseText() '%s' should be %d",  saidWords, inputText, expectedResult);

    if(expectedResult)
      tap.ok(Parser.Said(saidWords), testName);
    else
      tap.nok(Parser.Said(saidWords), testName);

    // test with extra content at the end
    String extendedText = String.Format("%s rol", inputText);
    Parser.ParseText(extendedText);
    if(expectedResult)
      tap.ok(Parser.Said(saidWords), testName);
    else
      tap.nok(Parser.Said(saidWords), testName);
}

void TestParser()
{
  tap.Comment("start Parser tests");

  // Test Parser.FindWordID
  {
    int wordID = Parser.FindWordID("machine");
    tap.is_int(wordID, -1, "Parser.FindWordID test for non-existing word");

    wordID = Parser.FindWordID("boat");
    tap.is_int(wordID, 1, "Parser.FindWordID test for existing word");
  }

  // Test Parser.ParseText and Parser.Said
  {
    Parser.ParseText("I recognized it"); // "it" and "I" are ignored words

    tap.ok(Parser.Said("recognized"), "Parser.Said test for recognized word");
    tap.nok(Parser.Said("unrecognized"), "Parser.Said test for unrecognized word");
  }

  // Test special words with Parser.Said
  {
    String inputThrowAnyWordAway = "throw dagger away";
    Parser.ParseText(inputThrowAnyWordAway);
    tap.ok(Parser.Said("throw anyword away"), "Parser.Said test for 'anyword'");

    String inputKillRol = "kill monster";
    Parser.ParseText(inputKillRol);
    tap.ok(Parser.Said("kill rol"), "Parser.Said test for 'rol'");
  }

  // Test Parser.Said with comma-separated words
  {
    String saidWords = "eat,take tablet";

    Parser.ParseText("eat tablet");
    tap.ok(Parser.Said(saidWords), "Parser.Said test with comma-separated words (1)");
    Parser.ParseText("take tablet");
    tap.ok(Parser.Said(saidWords), "Parser.Said test with comma-separated words (2)");
    Parser.ParseText("drink tablet");
    tap.nok(Parser.Said(saidWords), "Parser.Said test with comma-separated words (3)");
  }
  
  // Test Parser.Said with [brackets] for optional words
  {
    String saidWords = "look [brick] wall";

    Parser.ParseText("look wall");
    tap.ok(Parser.Said(saidWords), "Parser.Said test with optional word 'brick' (1)");
    Parser.ParseText("look brick wall");
    tap.ok(Parser.Said(saidWords), "Parser.Said test with optional word 'brick' (2)");
  }

  // Test Parser.SaidUnknownWord
  {
    String inputWithUnknownWord = "a text with unrecognized badword";
    Parser.ParseText(inputWithUnknownWord);

    String unknownWord = Parser.SaidUnknownWord();
    tap.is(unknownWord, "badword", "Parser.SaidUnknownWord test");
  }
  
  // Test Parser.Said with prefixed words
  {
    String saidWords = "take hammer,stone";

    Parser.ParseText("take hammer");
    tap.ok(Parser.Said(saidWords), "Parser.Said test with prefixed words 'stone hammer' (1)");
    Parser.ParseText("take stone");
    tap.ok(Parser.Said(saidWords), "Parser.Said test with prefixed words 'stone hammer' (2)");
    Parser.ParseText("take stone hammer");
    tap.nok(Parser.Said(saidWords), "Parser.Said test with prefixed words 'stone hammer' (3)");

    saidWords = "take hammer,stone hammer";

    Parser.ParseText("take hammer");
    tap.ok(Parser.Said(saidWords), "Parser.Said test with prefixed words 'stone hammer' (4)");
    Parser.ParseText("take stone");
    tap.nok(Parser.Said(saidWords), "Parser.Said test with prefixed words 'stone hammer' (5)");
    Parser.ParseText("take stone hammer");
    tap.ok(Parser.Said(saidWords), "Parser.Said test with prefixed words 'stone hammer' (6)");
    Parser.ParseText("take hammer hammer");
    tap.nok(Parser.Said(saidWords), "Parser.Said test with prefixed words 'stone hammer' (7)");

    saidWords = "take hammer,stone [hammer]";

    Parser.ParseText("take hammer");
    tap.ok(Parser.Said(saidWords), "Parser.Said test with prefixed words 'stone hammer' (8)");
    Parser.ParseText("take stone");
    tap.ok(Parser.Said(saidWords), "Parser.Said test with prefixed words 'stone hammer' (9)");
    Parser.ParseText("take stone hammer");
    tap.nok(Parser.Said(saidWords), "Parser.Said test with prefixed words 'stone hammer' (10)");
    Parser.ParseText("take hammer hammer");
    tap.ok(Parser.Said(saidWords), "Parser.Said test with prefixed words 'stone hammer' (11)");

    saidWords = "take stone hammer,hammer";

    Parser.ParseText("take hammer");
    tap.ok(Parser.Said(saidWords), "Parser.Said test with prefixed words 'stone hammer' (12)");
    Parser.ParseText("take stone");
    tap.nok(Parser.Said(saidWords), "Parser.Said test with prefixed words 'stone hammer' (13)");
    Parser.ParseText("take stone hammer");
    tap.ok(Parser.Said(saidWords), "Parser.Said test with prefixed words 'stone hammer' (14)");
  }

  // Test Parser.Said with multi-word synonym
  {
    String saidWords = "take blue-key";

    Parser.ParseText("take blue key");
    tap.ok(Parser.Said(saidWords), "Parser.Said test with multi-word synonym 'blue-key' (1)");
    Parser.ParseText("take blue-key");
    tap.ok(Parser.Said(saidWords), "Parser.Said test with multi-word synonym 'blue-key' (2)");

    saidWords = "take blue key";

    Parser.ParseText("take blue key");
    tap.ok(Parser.Said(saidWords), "Parser.Said test with multi-word synonym 'blue-key' (3)");
    Parser.ParseText("take blue-key");
    tap.ok(Parser.Said(saidWords), "Parser.Said test with multi-word synonym 'blue-key' (4)");

    saidWords = "take blue-key,blue key";

    Parser.ParseText("take blue key");
    tap.ok(Parser.Said(saidWords), "Parser.Said test with multi-word synonym 'blue-key' (5)");
    Parser.ParseText("take blue-key");
    tap.ok(Parser.Said(saidWords), "Parser.Said test with multi-word synonym 'blue-key' (6)");
  }

  // Test Parser.Said with one multi-word
  {
    String saidWords = "take red key";
    TestParserSaid(saidWords, "take tablet", 0);
    TestParserSaid(saidWords, "take brick", 0);
    TestParserSaid(saidWords, "take red key", 1);
    TestParserSaid(saidWords, "take blue key", 0);

    saidWords = "take tablet,red key";
    TestParserSaid(saidWords, "take tablet", 1);
    TestParserSaid(saidWords, "take brick", 0);
    TestParserSaid(saidWords, "take red key", 1);
    TestParserSaid(saidWords, "take blue key", 0);

    saidWords = "take red key,tablet";
    TestParserSaid(saidWords, "take tablet", 1);
    TestParserSaid(saidWords, "take brick", 0);
    TestParserSaid(saidWords, "take red key", 1);
    TestParserSaid(saidWords, "take blue key", 0);

    saidWords = "take tablet,brick,red key";
    TestParserSaid(saidWords, "take tablet", 1);
    TestParserSaid(saidWords, "take brick", 1);
    TestParserSaid(saidWords, "take red key", 1);
    TestParserSaid(saidWords, "take blue key", 0);

    saidWords = "take tablet,red key,brick";
    TestParserSaid(saidWords, "take tablet", 1);
    TestParserSaid(saidWords, "take brick", 1);
    TestParserSaid(saidWords, "take red key", 1);
    TestParserSaid(saidWords, "take blue key", 0);

    saidWords = "take red key,tablet,brick";
    TestParserSaid(saidWords, "take tablet", 1);
    TestParserSaid(saidWords, "take brick", 1);
    TestParserSaid(saidWords, "take red key", 1);
    TestParserSaid(saidWords, "take blue key", 0);
  }

  // Test Parser.Said with two multi-words
  {
    String saidWords = "take blue key,red key";
    TestParserSaid(saidWords, "take tablet", 0);
    TestParserSaid(saidWords, "take brick", 0);
    TestParserSaid(saidWords, "take red key", 1);
    TestParserSaid(saidWords, "take blue key", 1);

    saidWords = "take tablet,blue key,red key";
    TestParserSaid(saidWords, "take tablet", 1);
    TestParserSaid(saidWords, "take brick", 0);
    TestParserSaid(saidWords, "take red key", 1);
    TestParserSaid(saidWords, "take blue key", 1);

    saidWords = "take blue key,tablet,red key";
    TestParserSaid(saidWords, "take tablet", 1);
    TestParserSaid(saidWords, "take brick", 0);
    TestParserSaid(saidWords, "take red key", 1);
    TestParserSaid(saidWords, "take blue key", 1);

    saidWords = "take blue key,red key,tablet";
    TestParserSaid(saidWords, "take tablet", 1);
    TestParserSaid(saidWords, "take brick", 0);
    TestParserSaid(saidWords, "take red key", 1);
    TestParserSaid(saidWords, "take blue key", 1);
  }  

  tap.Comment("end Parser tests");
}