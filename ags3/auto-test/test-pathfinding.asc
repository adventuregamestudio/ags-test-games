// Test Pathfinding Module Script
int GetTestPathfindingCount()
{
  return 5 // safety checks
    + 3    // actual tests
  ;
}

void TestMove(Character *walker, String test_name, int fromx, int fromy, int tox, int toy, bool walk_straight, bool stop_if_nonwalkable)
{
  walker.x = fromx;
  walker.y = fromy;
  if (walk_straight)
    walker.WalkStraight(tox, toy, eNoBlock);
  else
    walker.Walk(tox, toy, eNoBlock, eWalkableAreas);
  bool force_stopped = false;
  while (walker.Moving)
  {
      int a = GetWalkableAreaAtRoom(walker.x, walker.y);
      if (a == 0 && stop_if_nonwalkable)
      {
        walker.StopMoving();
        force_stopped = true;
      }
      Wait(1);
  }
  
  String how_stopped;
  if (force_stopped)
    how_stopped = "force stopped";
  else
    how_stopped = "ended at";
    
  tap.Comment(String.Format("tried to move from %d,%d to %d,%d, %s %d,%d (area %d)", fromx, fromy, tox, toy, how_stopped, walker.x, walker.y, GetWalkableAreaAtRoom(walker.x, walker.y)));
  tap.ok(GetWalkableAreaAtRoom(walker.x, walker.y) > 0, String.Format("%s: stand on walkable", test_name));
}

#define SPRITE_CASE1_WALKABLEMASK 7
#define SPRITE_CASE2_WALKABLEMASK 8

// Tests few cases of faulty pathfinding, 
// where engine must ensure that character ends up on a walkable area
// even if appeared slightly off.
void TestFaultyPathfind1()
{
  tap.Comment("Pathfinding Faulty Case 1");
  // CASE 1
  // Prepare walkable area
  DrawingSurface *ds = GetDrawingSurfaceForWalkableArea();
  ds.Clear(0);
  ds.DrawImage(0, 0, SPRITE_CASE1_WALKABLEMASK);
  ds.Release();
  // Safety check: ensure that the walkable area is imported and drawn correctly
  int non_walkable = GetWalkableAreaAtRoom(132, 92);
  int walkable = GetWalkableAreaAtRoom(158, 110);
  tap.Comment(String.Format("test area at 132,92 = %d, at 158,110 = %d", non_walkable, walkable));
  tap.ok(non_walkable == 0, "TestPathfinding: safety test non-walkable pixel");
  tap.ok(walkable == 1, "TestPathfinding: safety test walkable pixel");
  
  Character* walker = cWalker1;
  TestMove(walker, "TestPathfinding: case 1: finished move", 164,98, -2396,1378, true, false);
  // WARNING: this will fail in pre-3.6.2
  TestMove(walker, "TestPathfinding: case 1: interrupted mov", 164,98, -2396,1378, true, true);
}

void TestFaultyPathfind2()
{
  tap.Comment("Pathfinding Faulty Case 2");
  // CASE 2
  // Prepare walkable area
  DrawingSurface *ds = GetDrawingSurfaceForWalkableArea();
  ds.Clear(0);
  ds.DrawImage(0, 0, SPRITE_CASE2_WALKABLEMASK);
  ds.Release();
  // Safety check: ensure that the walkable area is imported and drawn correctly
  int non_walkable = GetWalkableAreaAtRoom(600, 200);
  int walkable1 = GetWalkableAreaAtRoom(493, 409);
  int walkable2 = GetWalkableAreaAtRoom(919, 287);
  tap.Comment(String.Format("test area at 600, 200 = %d, at 493, 409 = %d, at 919, 287 = %d", non_walkable, walkable1, walkable2));
  tap.ok(non_walkable == 0, "TestPathfinding: safety test non-walkable pixel");
  tap.ok(walkable1 == 1, "TestPathfinding: safety test walkable1 pixel");
  tap.ok(walkable2 == 6, "TestPathfinding: safety test walkable2 pixel");
  
  SetAreaScaling(1, 57, 143);
  SetAreaScaling(2, 57, 143);
  SetAreaScaling(3, 57, 143);
  SetAreaScaling(4, 57, 143);
  SetAreaScaling(5, 57, 143);
  SetAreaScaling(6, 50, 65);
  Character* walker = cWalker2;
  walker.ScaleMoveSpeed = true;
  TestMove(walker, "TestPathfinding: case 2: potentially end on non-walkable area", 1136, 675, 945, 270, false, false);
}

void TestPathfinding()
{
  tap.Comment("start Pathfinding tests");
  int old_game_speed = GetGameSpeed();
  SetGameSpeed(1000);
  
  TestFaultyPathfind1();
  TestFaultyPathfind2();
  
  SetGameSpeed(old_game_speed);
  tap.Comment("end Pathfinding tests");
}
