// Test EngineRender Module Script
int GetTestEngineRenderCount()
{
  return 16;
}

void _FillSprite(DynamicSprite *spr, int color)
{
  DrawingSurface *ds = spr.GetDrawingSurface();
  ds.Clear(color);
  ds.Release();
}

void _HideControls(GUI *parent)
{
  for (int i = 0; i < parent.ControlCount; i++) {
    parent.Controls[i].Visible = false;
  }
}

// Takes screenshot 1:1 and compares a part of the image with the given sprite
bool _TakeScreenshotAndCompareRect(int rx, int ry, int rw, int rh, DynamicSprite *match_with)
{
  DynamicSprite *shot = DynamicSprite.CreateFromScreenShot(Screen.Width, Screen.Height);
  DrawingSurface *test_ds = shot.GetDrawingSurface();
  DrawingSurface *match_ds = match_with.GetDrawingSurface();
  
  for (int y = 0; y < rh; y++) {
    for (int x = 0; x < rw; x++) {
      if (test_ds.GetPixel(x + rx, y + ry) != match_ds.GetPixel(x, y)) {
        return false;
      }
    }
  }
  
  return true;
}

void TestEngineRender()
{  
  tap.Comment("start EngineRender tests");
  tap.Comment(String.Format("System.HardwareAcceleration = %d", System.HardwareAcceleration));
  
  // Do not change GUI looks when disabled
  SetGameOption(OPT_WHENGUIDISABLED, 2);
  
  //
  // Object texture update after dynamic sprite change
  //
  {
    int color1 = 10;
    int color2 = 11;
    Object* oDynamicObject = object[0];
    DynamicSprite* dynspr = DynamicSprite.Create(10, 10);
    _FillSprite(dynspr, color1);
    oDynamicObject.Graphic = dynspr.Graphic;
    oDynamicObject.X = 100;
    oDynamicObject.Y = 100;
    oDynamicObject.Visible = true;
    Wait(1);
    tap.ok(
      _TakeScreenshotAndCompareRect(oDynamicObject.X, oDynamicObject.Y - dynspr.Height, dynspr.Width, dynspr.Height, dynspr), 
      "DynamicSprite update 1-1 (room object) is matched");
    
    oDynamicObject.Visible = false; // stop its render pass for a moment
    _FillSprite(dynspr, color2); // change the sprite
    Wait(1); // one pass with object disabled
    oDynamicObject.Visible = true; // start render pass again
    Wait(1); // let it render
    tap.ok(
      _TakeScreenshotAndCompareRect(oDynamicObject.X, oDynamicObject.Y - dynspr.Height, dynspr.Width, dynspr.Height, dynspr), 
      "DynamicSprite update 1-2 (room object) is matched");
    
    oDynamicObject.Visible = false;
    oDynamicObject.Graphic = 0;
    dynspr.Delete();
  }
  
  //
  // Object texture update after dynamic sprite recreated
  // with coincidentally the same sprite ID
  //
  {
    int color1 = 10;
    int color2 = 11;
    DynamicSprite* dynspr = DynamicSprite.Create(10, 10);
    Object* oDynamicObject = object[1];
    _FillSprite(dynspr, color1);
    oDynamicObject.Graphic = dynspr.Graphic;
    oDynamicObject.X = 100;
    oDynamicObject.Y = 100;
    oDynamicObject.Visible = true;
    Wait(1);
    tap.ok(
      _TakeScreenshotAndCompareRect(oDynamicObject.X, oDynamicObject.Y - dynspr.Height, dynspr.Width, dynspr.Height, dynspr), 
      "DynamicSprite recreate 1-1 (room object) is matched");
    
    oDynamicObject.Visible = false; // stop its render pass for a moment
    dynspr.Delete(); // recreate the sprite
    dynspr = DynamicSprite.Create(10, 10);
    _FillSprite(dynspr, color2);
    Wait(1); // one pass with object disabled
    oDynamicObject.Graphic = dynspr.Graphic;
    oDynamicObject.Visible = true; // start render pass again
    Wait(1); // let it render
    tap.ok(
      _TakeScreenshotAndCompareRect(oDynamicObject.X, oDynamicObject.Y - dynspr.Height, dynspr.Width, dynspr.Height, dynspr), 
      "DynamicSprite recreate 1-2 (room object) is matched");
    
    oDynamicObject.Visible = false;
    oDynamicObject.Graphic = 0;
    dynspr.Delete();
  }
  
  //
  // Overlay texture update after dynamic sprite change;
  // We test overlays separately, because they have slightly different
  // path of updating their textures in the engine. Also they are
  // dynamic objects themselves and may be deleted completely.
  //
  {
    int color1 = 10;
    int color2 = 11;
    DynamicSprite* dynspr = DynamicSprite.Create(10, 10);
    _FillSprite(dynspr, color1);
    Overlay* over = Overlay.CreateGraphical(100, 100, dynspr.Graphic);
    Wait(1);
    tap.ok(
      _TakeScreenshotAndCompareRect(over.X, over.Y, dynspr.Width, dynspr.Height, dynspr), 
      "DynamicSprite update 2-1 (overlay) is matched");
    
    over.Transparency = 100; // stop its render pass for a moment
    _FillSprite(dynspr, color2); // change the sprite
    Wait(1); // one pass with object disabled
    over.Transparency = 0; // start render pass again
    Wait(1); // let it render
    tap.ok(
      _TakeScreenshotAndCompareRect(over.X, over.Y, dynspr.Width, dynspr.Height, dynspr), 
      "DynamicSprite update 2-2 (overlay) is matched");
    
    over.Remove();
    dynspr.Delete();
  }
  
  //
  // Overlay texture update after dynamic sprite recreated
  // with coincidentally the same sprite ID
  //
  {
    int color1 = 10;
    int color2 = 11;
    DynamicSprite* dynspr = DynamicSprite.Create(10, 10);
    _FillSprite(dynspr, color1);
    Overlay* over = Overlay.CreateGraphical(100, 100, dynspr.Graphic);
    Wait(1);
    tap.ok(
      _TakeScreenshotAndCompareRect(over.X, over.Y, dynspr.Width, dynspr.Height, dynspr), 
      "DynamicSprite recreate 2-1 (overlay) is matched");
    
    over.Transparency = 100; // stop its render pass for a moment
    dynspr.Delete(); // recreate the sprite
    dynspr = DynamicSprite.Create(10, 10);
    _FillSprite(dynspr, color2);
    Wait(1); // one pass with object disabled
    over.Graphic = dynspr.Graphic;
    over.Transparency = 0; // start render pass again
    Wait(1); // let it render
    tap.ok(
      _TakeScreenshotAndCompareRect(over.X, over.Y, dynspr.Width, dynspr.Height, dynspr), 
      "DynamicSprite recreate 2-2 (overlay) is matched");
    
    over.Remove();
    dynspr.Delete();
  }
  
  //
  // GUI texture update after dynamic sprite change.
  //
  {
    int color1 = 10;
    int color2 = 11;
    DynamicSprite* dynspr = DynamicSprite.Create(10, 10, false);
    _FillSprite(dynspr, color1);
    gGui1.BackgroundGraphic = dynspr.Graphic;
    gGui1.X = 100;
    gGui1.Y = 100;
    gGui1.Width = dynspr.Width;
    gGui1.Height = dynspr.Height;
    gGui1.Visible = true;
    _HideControls(gGui1);
    Wait(1);
    tap.ok(
      _TakeScreenshotAndCompareRect(gGui1.X, gGui1.Y, gGui1.Width, gGui1.Height, dynspr), 
      "DynamicSprite update 3-1 (gui) is matched");
    
    _FillSprite(dynspr, color2);
    Wait(1);
    tap.ok(
      _TakeScreenshotAndCompareRect(gGui1.X, gGui1.Y, gGui1.Width, gGui1.Height, dynspr), 
      "DynamicSprite update 3-2 (gui) is matched");
    
    gGui1.BackgroundGraphic = 0;
    dynspr.Delete();
    
    //-------------------------------------------------------------------------
    
    dynspr = DynamicSprite.Create(10, 10, false);
    _FillSprite(dynspr, color1);
    Button1.NormalGraphic = dynspr.Graphic;
    Button1.Width = dynspr.Width;
    Button1.Height = dynspr.Height;
    Button1.Visible = true;
    Wait(1);
    tap.ok(
      _TakeScreenshotAndCompareRect(gGui1.X + Button1.X, gGui1.Y + Button1.Y, Button1.Width, Button1.Height, dynspr), 
      "DynamicSprite update 4-1 (gui button) is matched");
      
    _FillSprite(dynspr, color2);
    Wait(1);
    tap.ok(
      _TakeScreenshotAndCompareRect(gGui1.X + Button1.X, gGui1.Y + Button1.Y, Button1.Width, Button1.Height, dynspr), 
      "DynamicSprite update 4-2 (gui button) is matched");
    
    Button1.NormalGraphic = 0;
    Button1.Visible = false;
    gGui1.Visible = false;
    dynspr.Delete();
  }
  
  //
  // GUI texture update after dynamic sprite recreated
  //
  {
    int color1 = 10;
    int color2 = 11;
    DynamicSprite* dynspr = DynamicSprite.Create(10, 10, false);
    _FillSprite(dynspr, color1);
    gGui1.BackgroundGraphic = dynspr.Graphic;
    gGui1.X = 100;
    gGui1.Y = 100;
    gGui1.Width = dynspr.Width;
    gGui1.Height = dynspr.Height;
    gGui1.Visible = true;
    _HideControls(gGui1);
    Wait(1);
    tap.ok(
      _TakeScreenshotAndCompareRect(gGui1.X, gGui1.Y, gGui1.Width, gGui1.Height, dynspr), 
      "DynamicSprite recreate 3-1 (gui) is matched");
    
    dynspr.Delete();
    dynspr = DynamicSprite.Create(10, 10, false);
    _FillSprite(dynspr, color2);
    gGui1.BackgroundGraphic = dynspr.Graphic;
    Wait(1);
    tap.ok(
      _TakeScreenshotAndCompareRect(gGui1.X, gGui1.Y, gGui1.Width, gGui1.Height, dynspr), 
      "DynamicSprite recreate 3-2 (gui) is matched");
    
    gGui1.BackgroundGraphic = 0;
    dynspr.Delete();
    
    //-------------------------------------------------------------------------
    
    dynspr = DynamicSprite.Create(10, 10, false);
    _FillSprite(dynspr, color1);
    Button1.NormalGraphic = dynspr.Graphic;
    Button1.Width = dynspr.Width;
    Button1.Height = dynspr.Height;
    Button1.Visible = true;
    Wait(1);
    tap.ok(
      _TakeScreenshotAndCompareRect(gGui1.X + Button1.X, gGui1.Y + Button1.Y, Button1.Width, Button1.Height, dynspr), 
      "DynamicSprite recreate 4-1 (gui button) is matched");
    
    dynspr.Delete();
    dynspr = DynamicSprite.Create(10, 10, false);
    _FillSprite(dynspr, color2);
    Button1.NormalGraphic = dynspr.Graphic;
    Wait(1);
    tap.ok(
      _TakeScreenshotAndCompareRect(gGui1.X + Button1.X, gGui1.Y + Button1.Y, Button1.Width, Button1.Height, dynspr), 
      "DynamicSprite recreate 4-2 (gui button) is matched");
    
    Button1.NormalGraphic = 0;
    Button1.Visible = false;
    gGui1.Visible = false;
    dynspr.Delete();
  }
  
  tap.Comment("end EngineRender tests");
}
